<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal" data-bs-id="{{id}}" data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}" data-bs-article-id="{{articleId}}">
                    수정
                </button>
                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
                data-comment-id="{{id}}">삭제</button>
            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">덧글 수정</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <!-- 닉네임 입력 -->
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control form-control-sm" id="edit-comment-nickname">
                    </div>
                    <!-- 댓글 본문 입력 -->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control form-control-sm" rows="3"
                                  id="edit-comment-body"></textarea>
                    </div>
                    <!-- 히든 인풋 -->
                    <input type="hidden" id="edit-comment-id">
                    <input type="hidden" id="edit-comment-article-id">
                    <!-- 전송 버튼 -->
                    <button type="button" class="btn btn-outline-primary btn-sm" id="comment-update-btn">댓글 수정</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 모달 이벤트 처리 -->
<Script>
{
    const commentEditModal = document.querySelector("#comment-edit-modal");
    commentEditModal.addEventListener("show.bs.modal", function(event) {
        const triggerBtn = event.relatedTarget;
        const id = triggerBtn.getAttribute("data-bs-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        const articleId = triggerBtn.getAttribute("data-bs-article-id");

        document.querySelector("#edit-comment-nickname").value = nickname;
        document.querySelector("#edit-comment-body").value = body;
        document.querySelector("#edit-comment-id").value = id;
        document.querySelector("#edit-comment-article-id").value = articleId;
    });
}
{
    const commentUpdateBtn = document.querySelector("#comment-update-btn");
    commentUpdateBtn.addEventListener("click", function() {
        const comment = {
            id: document.querySelector("#edit-comment-id").value,
            nickname: document.querySelector("#edit-comment-nickname").value,
            body: document.querySelector("#edit-comment-body").value,
            article_id: document.querySelector("#edit-comment-article-id").value
        };

        const url = "/api/comments/" + comment.id;
        fetch(url, {
            method: "PATCH",
            body: JSON.stringify(comment),
            headers: {
                "Content-Type": "application/json"
            }
        }).then(response => {
        const msg = (response.ok) ? "덧글이 수정되었습니다." : "덧글 수정 실패..!";
        alert(msg);
        window.location.reload();
        });
    });
}
</Script>
<script>
{
  const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn"); // all을 안하면 처음 선택된 것만 발동함
  commentDeleteBtns.forEach(btn => {  // all 일때 forEach 문을 사용
    btn.addEventListener("click", (event) => { // 해당 이벤트를 파라메타로 전달
       const commentDeleteBtn = event.srcElement;  //  이 이벤트를 발생시킨 엘리맨트를 가져옴
       const commentId = commentDeleteBtn.getAttribute("data-comment-id");

       const url = `/api/comments/${commentId}`;
       fetch(url, {
         method: "DELETE"
       }).then(response => {
         if(!response.ok){
            alert("덧글 삭제 실패..!");
            return;
         }
         const target = document.querySelector(`#comments-${commentId}`);
         target.remove();
       });
    });
  });
}
</script>